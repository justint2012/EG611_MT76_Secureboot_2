From 79260311fd75a1c56f6accf437aa9cefc5dff608 Mon Sep 17 00:00:00 2001
From: Justin Tsai <justin@gmail.com>
Date: Wed, 10 May 2023 10:07:11 +0800
Subject: [PATCH 01/12] [MTK patch] add
 [RJIO][MT7986][AX6000][MT76]patch_001-002 patch [001] including: 1.pstore
 patch target/linux/mediatek/patches-5.4/9111-enable-drm.patch 2.kernel
 defconfig target/linux/mediatek/mt7986/config-5.4 3.atf patch
 [001]atf2.6_0512_pstore.diff

---
 atf/plat/mediatek/mt7986/include/mt7986_def.h      |  5 ++
 atf/plat/mediatek/mt7986/plat_pm.c                 | 20 ++++++++
 openwrt/target/linux/mediatek/mt7986/config-5.4    | 24 ++++++---
 .../mediatek/patches-5.4/9111-enable-drm.patch     | 57 ++++++++++++++++++++++
 4 files changed, 98 insertions(+), 8 deletions(-)
 create mode 100755 openwrt/target/linux/mediatek/patches-5.4/9111-enable-drm.patch

diff --git a/atf/plat/mediatek/mt7986/include/mt7986_def.h b/atf/plat/mediatek/mt7986/include/mt7986_def.h
index 394e9d0..315c46f 100644
--- a/atf/plat/mediatek/mt7986/include/mt7986_def.h
+++ b/atf/plat/mediatek/mt7986/include/mt7986_def.h
@@ -31,6 +31,11 @@
 #define MTK_WDT_RESTART_KEY		0x1971
 #define MTK_WDT_MODE_ENABLE		0x0001
 
+/* DDR_RESERVE */
+#define MTK_DDR_RESERVE_MODE		(CKSYS_DRM_BASE + 0x0000)
+#define MTK_DDR_RESERVE_ENABLE	0x0001
+#define MTK_DDR_RESERVE_KEY		0x22000000
+
 /* MPU */
 #define EMI_MPU_SA0			(EMI_MPU_APB_BASE + 0x100)
 #define EMI_MPU_EA0			(EMI_MPU_APB_BASE + 0x200)
diff --git a/atf/plat/mediatek/mt7986/plat_pm.c b/atf/plat/mediatek/mt7986/plat_pm.c
index 7e8ac21..f0cf618 100644
--- a/atf/plat/mediatek/mt7986/plat_pm.c
+++ b/atf/plat/mediatek/mt7986/plat_pm.c
@@ -525,6 +525,25 @@ static void __dead2 plat_system_reset(void)
 	panic();
 }
 
+static int __dead2 plat_system_reset2(int is_vendor, int reset_type,
+						u_register_t cookie)
+{
+	/* Write the System Configuration Control Register */
+	INFO("MTK System Exception Reset\n");
+
+	mmio_setbits_32(MTK_DDR_RESERVE_MODE, (MTK_DDR_RESERVE_ENABLE | MTK_DDR_RESERVE_KEY));
+	mmio_clrsetbits_32(MTK_WDT_BASE,
+			   (MTK_WDT_MODE_DUAL_MODE | MTK_WDT_MODE_IRQ),
+			   MTK_WDT_MODE_KEY);
+	mmio_setbits_32(MTK_WDT_BASE, (MTK_WDT_MODE_KEY | MTK_WDT_MODE_EXTEN));
+	mmio_setbits_32(MTK_WDT_RESTART, MTK_WDT_RESTART_KEY);
+	mmio_setbits_32(MTK_WDT_SWRST, MTK_WDT_SWRST_KEY);
+
+	wfi();
+	ERROR("MTK System Reset: operation not handled.\n");
+	panic();
+}
+
 #if !PSCI_EXTENDED_STATE_ID
 static int plat_validate_power_state(unsigned int power_state,
 				     psci_power_state_t *req_state)
@@ -622,6 +641,7 @@ static const plat_psci_ops_t plat_plat_pm_ops = {
 	.pwr_domain_suspend_finish	= plat_power_domain_suspend_finish,
 	.system_off			= plat_system_off,
 	.system_reset			= plat_system_reset,
+	.system_reset2			= plat_system_reset2,
 	.validate_power_state		= plat_validate_power_state,
 	.get_sys_suspend_power_state	= plat_get_sys_suspend_power_state,
 };
diff --git a/openwrt/target/linux/mediatek/mt7986/config-5.4 b/openwrt/target/linux/mediatek/mt7986/config-5.4
index 1917126..0373941 100644
--- a/openwrt/target/linux/mediatek/mt7986/config-5.4
+++ b/openwrt/target/linux/mediatek/mt7986/config-5.4
@@ -321,7 +321,6 @@ CONFIG_MTD_NAND_ECC_SW_HAMMING=y
 CONFIG_MTD_NAND_MTK=y
 CONFIG_MTD_RAW_NAND=y
 CONFIG_MTD_SPI_NAND=y
-# CONFIG_MTD_SPI_NAND_W25N01KV is not set
 CONFIG_MTD_SPI_NOR=y
 CONFIG_MTD_SPLIT_FIRMWARE=y
 CONFIG_MTD_SPLIT_FIT_FW=y
@@ -356,6 +355,7 @@ CONFIG_NET_DSA_TAG_MTK=y
 CONFIG_NET_FLOW_LIMIT=y
 # CONFIG_NET_MEDIATEK_HNAT is not set
 CONFIG_NET_MEDIATEK_SOC=y
+CONFIG_NET_MEDIATEK_SOC_WED=y
 CONFIG_NET_SWITCHDEV=y
 CONFIG_NET_VENDOR_MEDIATEK=y
 CONFIG_NF_CONNTRACK=y
@@ -426,6 +426,17 @@ CONFIG_POWER_RESET=y
 CONFIG_POWER_RESET_SYSCON=y
 CONFIG_POWER_SUPPLY=y
 CONFIG_PRINTK_TIME=y
+CONFIG_PSTORE=y
+# CONFIG_PSTORE_842_COMPRESS is not set
+# CONFIG_PSTORE_DEFLATE_COMPRESS is not set
+# CONFIG_PSTORE_LZ4HC_COMPRESS is not set
+# CONFIG_PSTORE_LZ4_COMPRESS is not set
+# CONFIG_PSTORE_LZO_COMPRESS is not set
+CONFIG_PSTORE_CONSOLE=y
+CONFIG_PSTORE_PMSG=y
+CONFIG_PSTORE_FTRACE=y
+CONFIG_PSTORE_RAM=y
+# CONFIG_PSTORE_ZSTD_COMPRESS is not set
 CONFIG_PWM=y
 CONFIG_PWM_MEDIATEK=y
 # CONFIG_PWM_MTK_DISP is not set
@@ -438,6 +449,9 @@ CONFIG_RATIONAL=y
 CONFIG_RCU_NEED_SEGCBLIST=y
 CONFIG_RCU_STALL_COMMON=y
 CONFIG_REALTEK_PHY=y
+CONFIG_REED_SOLOMON=y
+CONFIG_REED_SOLOMON_DEC8=y
+CONFIG_REED_SOLOMON_ENC8=y
 CONFIG_REGMAP=y
 CONFIG_REGMAP_MMIO=y
 CONFIG_REGULATOR=y
@@ -537,10 +551,4 @@ CONFIG_ZLIB_DEFLATE=y
 CONFIG_ZLIB_INFLATE=y
 CONFIG_ZONE_DMA32=y
 # CONFIG_BPF_KPROBE_OVERRIDE is not set
-# CONFIG_HIST_TRIGGERS is not set
-CONFIG_NETFILTER=y
-CONFIG_NETFILTER_ADVANCED=y
-CONFIG_RELAY=y
-CONFIG_BRIDGE_NETFILTER=y
-CONFIG_NETFILTER_FAMILY_BRIDGE=y
-CONFIG_SKB_EXTENSIONS=y
+# CONFIG_HIST_TRIGGERS is not set
\ No newline at end of file
diff --git a/openwrt/target/linux/mediatek/patches-5.4/9111-enable-drm.patch b/openwrt/target/linux/mediatek/patches-5.4/9111-enable-drm.patch
new file mode 100755
index 0000000..0a379b2
--- /dev/null
+++ b/openwrt/target/linux/mediatek/patches-5.4/9111-enable-drm.patch
@@ -0,0 +1,57 @@
+diff -Nuar a/drivers/firmware/psci/psci.c b/drivers/firmware/psci/psci.c
+--- a/drivers/firmware/psci/psci.c	2022-05-13 18:01:29.985583888 +0800
++++ b/drivers/firmware/psci/psci.c	2022-05-13 17:50:20.979249909 +0800
+@@ -267,7 +267,7 @@
+
+ static void psci_sys_reset(enum reboot_mode reboot_mode, const char *cmd)
+ {
+-	if ((reboot_mode == REBOOT_WARM || reboot_mode == REBOOT_SOFT) &&
++	if ((reboot_mode == REBOOT_WARM || reboot_mode == REBOOT_SOFT || get_reboot_emergency()) &&
+ 	    psci_system_reset2_supported) {
+ 		/*
+ 		 * reset_type[31] = 0 (architectural)
+
+diff -Nuar a/include/linux/reboot.h b/include/linux/reboot.h
+--- a/include/linux/reboot.h	2022-05-13 17:48:46.071494533 +0800
++++ b/include/linux/reboot.h	2022-05-13 17:50:34.191215859 +0800
+@@ -59,6 +59,7 @@
+ extern void machine_power_off(void);
+ 
+ extern void machine_shutdown(void);
++extern bool get_reboot_emergency(void);
+ struct pt_regs;
+ extern void machine_crash_shutdown(struct pt_regs *);
+ 
+diff -Nuar a/kernel/reboot.c b/kernel/reboot.c
+--- a/kernel/reboot.c	2022-05-13 17:49:29.071383727 +0800
++++ b/kernel/reboot.c	2022-05-13 17:50:06.435287398 +0800
+@@ -46,6 +46,8 @@
+ enum reboot_type reboot_type = BOOT_ACPI;
+ int reboot_force;
+ 
++static bool reboot_emergency = false;
++
+ /*
+  * If set, this is used for preparing the system to power off.
+  */
+@@ -64,6 +66,7 @@
+ void emergency_restart(void)
+ {
+ 	kmsg_dump(KMSG_DUMP_EMERG);
++	reboot_emergency = true;
+ 	machine_emergency_restart();
+ }
+ EXPORT_SYMBOL_GPL(emergency_restart);
+@@ -76,6 +79,12 @@
+ 	device_shutdown();
+ }
+ 
++bool get_reboot_emergency(void)
++{
++	return reboot_emergency;
++}
++EXPORT_SYMBOL_GPL(get_reboot_emergency);
++
+ /**
+  *	register_reboot_notifier - Register function to be called at reboot time
+  *	@nb: Info about notifier function to be called
-- 
2.7.4

